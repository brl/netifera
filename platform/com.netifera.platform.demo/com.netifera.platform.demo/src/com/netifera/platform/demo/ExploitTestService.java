package com.netifera.platform.demo;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.channels.SocketChannel;

import com.netifera.platform.api.tools.ITool;
import com.netifera.platform.api.tools.IToolContext;
import com.netifera.platform.api.tools.ToolException;
import com.netifera.platform.demo.internal.Activator;
import com.netifera.platform.util.addresses.inet.InternetAddress;

public class ExploitTestService implements ITool {

	private IToolContext context;
	private Iterable<InternetAddress> targetAddresses;
	private int port;
	private SocketChannel socket;
	
	public void run(IToolContext context) throws ToolException {
		this.context = context;
		context.setTitle("Netifera Test Service Exploit");
		setupToolOptions();
		
		try {
			for(InternetAddress target : targetAddresses)
				connectSocket(target);
			System.out.println("Socket connected!");
		} catch (IOException e) {
			context.error("Connect failed");
			context.done();
			return;
		}
		
		IProbeDeployer deployer = Activator.getDefault().getProbeDeployer();
		if(deployer == null) {
			context.error("No Probe deployer service found");
			context.done();
			return;
		}
		
		deployer.deployProbe(socket, context.getRealm(), context.getSpaceId());
		context.done();
	}
	
	@SuppressWarnings("unchecked")
	private void setupToolOptions() {
		targetAddresses = (Iterable<InternetAddress>) context.getConfiguration().get("target");
		String portString = (String) context.getConfiguration().get("port");
		port = Integer.parseInt(portString);
	}
	
	private void connectSocket(InternetAddress target) throws IOException {
		
		InetSocketAddress addr = new InetSocketAddress(target.toInetAddress(), port);
		socket = SocketChannel.open(addr);
	}
	

}
